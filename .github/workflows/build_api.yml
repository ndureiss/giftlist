name: API - Build & Test

on:
  push:
    branches:
      - v1
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./api
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Prepare Node ${{ matrix.node-version }} 🔧
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install 🔧
        run: npm ci
      - name: Lint 🚧
        run: npm run lint
  
  prettier:
    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./api
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Prepare Node ${{ matrix.node-version }} 🔧
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install 🔧
        run: npm ci
      - name: Prettier 🌈
        run: npm run prettier:check

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./api
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Prepare Node ${{ matrix.node-version }} 🔧
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install 🔧
        run: npm ci
      - name: Build 🏗️
        run: npm run build --if-present
  
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./api
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
      - name: Prepare Node ${{ matrix.node-version }} 🔧
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install 🔧
        run: npm ci
      - shell: bash
        run: |
          touch tests/.env
          mkdir -p src/config/certs
          curl --create-dirs -o src/config/certs/root.crt -O https://cockroachlabs.cloud/clusters/f82eaea0-cfe2-4492-aa07-e986cd93e46d/cert
      - name: Test 🚨
        run: npm test
        env:
          PORT: ${{ secrets.API_PORT }}
          DB: ${{ secrets.TEST_DB }}
          DB_TYPE: ${{ secrets.DB_TYPE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.TEST_DB_USER }}
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          DB_CERT: ${{ secrets.DB_CERT }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          AUTH0_CLIENT_ID: ${{ secrets.TEST_AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.TEST_AUTH0_CLIENT_SECRET }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_ISSUER: ${{ secrets.AUTH0_ISSUER }}
          AUTH0_JWKS_URI: ${{ secrets.AUTH0_JWKS_URI }}
          AUTH0_TOKEN_URL: ${{ secrets.AUTH0_TOKEN_URL }}
