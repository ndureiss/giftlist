{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UUID": {
				"type": "string",
				"format": "uuid",
				"description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
				"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
			},
			"Boolean": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"Partial_ListDTO_": {
				"properties": {
					"title": {
						"type": "string",
						"default": ""
					},
					"isShared": {
						"$ref": "#/components/schemas/Boolean"
					},
					"sharingCode": {
						"$ref": "#/components/schemas/UUID"
					},
					"closureDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UserIdDTO": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/UUID"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"MailAlreadyUsedError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"email": {
				"type": "string",
				"format": "email",
				"description": "Stringified email.\nSee [Email Regex](https://emailregex.com/) and [RFC 5322](https://tools.ietf.org/html/rfc5322)",
				"pattern": "(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))"
			},
			"CreateUserDTO": {
				"properties": {
					"email": {
						"$ref": "#/components/schemas/email"
					},
					"displayName": {
						"type": "string",
						"default": ""
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Partial_UserDTO_": {
				"properties": {
					"email": {
						"$ref": "#/components/schemas/email"
					},
					"displayName": {
						"type": "string",
						"default": ""
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UserDTO": {
				"properties": {
					"email": {
						"$ref": "#/components/schemas/email"
					},
					"displayName": {
						"type": "string",
						"default": ""
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"UserNotFoundError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "Giftlist API",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/lists": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "Creates a new list.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "Gets all user's lists data.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": []
			}
		},
		"/lists/{_listId}": {
			"put": {
				"operationId": "Edit",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Edit a list.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_listId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_ListDTO_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Delete a list.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_listId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			},
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "Sends back a list in the response based on its id.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_listId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/lists/{_listId}/share": {
			"put": {
				"operationId": "Share",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Creates a sharing code for a list to make it public.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_listId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/lists/{_listId}/unshare": {
			"put": {
				"operationId": "Private",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Makes a list private.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_listId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/lists/invite/{_sharingCode}": {
			"get": {
				"operationId": "GetFromSharingCode",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Get a list from its sharing code.",
				"tags": [
					"List"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "_sharingCode",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		},
		"/users": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserIdDTO"
								}
							}
						}
					},
					"400": {
						"description": "If mail is already used",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MailAlreadyUsedError"
								}
							}
						}
					}
				},
				"description": "Create a new user during sign up. Even if users are authenticated and\ncreated by Auth0, we manage a user database to store preferences,\nfriends and much more.",
				"tags": [
					"User"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "data to create a user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserDTO"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserDTO"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Gets all user's data.",
				"tags": [
					"User"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": []
			}
		},
		"/users/{userId}": {
			"put": {
				"operationId": "Edit",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Edit a user.",
				"tags": [
					"User"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"description": "the GUID of user",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				],
				"requestBody": {
					"description": "data to edit a user",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_UserDTO_"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete",
				"responses": {
					"204": {
						"description": ""
					}
				},
				"description": "Delete logged user.",
				"tags": [
					"User"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"description": "the GUID of user",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			},
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserDTO"
								}
							}
						}
					},
					"400": {
						"description": "If userId is incorrect",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserNotFoundError"
								}
							}
						}
					}
				},
				"description": "Gets logged user's data.",
				"tags": [
					"User"
				],
				"security": [
					{
						"auth0": []
					}
				],
				"parameters": [
					{
						"description": "the GUID of user",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/UUID"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}